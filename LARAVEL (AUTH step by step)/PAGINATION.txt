public function index()
{
   	     // mengambil data dari table pegawai
		$pegawai = DB::table('pegawai')->paginate(10);
 
    	     // mengirim data pegawai ke view index
		return view('index',['pegawai' => $pegawai]);
 
}




===========


VIEW

<style type="text/css">
		.pagination li{
			float: left;
			list-style-type: none;
			margin:5px;
		}
	</style>


<table border="1">
		<tr>
			<th>Nama</th>
			<th>Jabatan</th>
			<th>Umur</th>
			<th>Alamat</th>
		</tr>
		@foreach($pegawai as $p)
		<tr>
			<td>{{ $p->pegawai_nama }}</td>
			<td>{{ $p->pegawai_jabatan }}</td>
			<td>{{ $p->pegawai_umur }}</td>
			<td>{{ $p->pegawai_alamat }}</td>
		</tr>
		@endforeach
	</table>
 
	<br/>
	Halaman : {{ $pegawai->currentPage() }} <br/>
	Jumlah Data : {{ $pegawai->total() }} <br/>
	Data Per Halaman : {{ $pegawai->perPage() }} <br/>
 
 
	{{ $pegawai->links() }}




$paginator->count()			Get the number of items for the current page.
$paginator->currentPage()		Get the current page number.
$paginator->firstItem()			Get the result number of the first item in the results.
$paginator->getOptions()		Get the paginator options.
$paginator->getUrlRange($start, $end)	Create a range of pagination URLs.
$paginator->hasPages()			Determine if there are enough items to split into multiple pages.
$paginator->hasMorePages()		Determine if there are more items in the data store.
$paginator->items()			Get the items for the current page.
$paginator->lastItem()			Get the result number of the last item in the results.
$paginator->lastPage()			Get the page number of the last available page. (Not available when using simplePaginate).
$paginator->nextPageUrl()		Get the URL for the next page.
$paginator->onFirstPage()		Determine if the paginator is on the first page.
$paginator->perPage()			The number of items to be shown per page.
$paginator->previousPageUrl()		Get the URL for the previous page.
$paginator->total()			Determine the total number of matching items in the data store. (Not available when using simplePaginate).
$paginator->url($page)			Get the URL for a given page number.
$paginator->getPageName()		Get the query string variable used to store the page.
$paginator->setPageName($name)		Set the query string variable used to store the page.
<?php
namespace App\Http\Controllers;
use App\User;
use App\Consultant;
use App\ConsultantMail;
use App\UserMail;

use Illuminate\Support\Facades\Hash;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Crypt;

use Illuminate\Support\Facades\Mail;
use App\Mail\MyEmail;
use Illuminate\Support\Facades\DB;
use DateTime;
use Storage;
use Illuminate\Http\File;
use Sentinel;
use Illuminate\Support\Facades\Lang;
use Illuminate\Support\Facades\Redirect;
use Illuminate\Support\Str;

class AuthController extends Controller
{

    public function userlogin(Request $request)
    {
    
        $this->validate($request, [
            'email' => 'required',
            'password' => 'required'
        ]);

        $search = User::where('email', $request->input('email'))->first();
        
        if (UserMail::find($request->input('email'))) {

            if (Hash::check($request->input('password'), $search->password)) {     
                
                $apikey = Str::random(25);
                User::where('email', $request->input('email'))->update(['api_token' => "$apikey"]);

                $userDetail = $search->user_detail;
                $dJson = json_decode($userDetail,TRUE);
                
                $results = array(
                    'status' => 'sukses', 
                    'json_data' => array(
                        'consultant_id' => $search->userid,
                        'email' => $search->email,
                        'nama' => $search->username,
                        'user_detail' => $dJson,
                    ),
                );

            } else {

                $results = array(
                    'status' => 'gagal',
                    'json_data' => array(
                        'message' => "email atau password anda salah"
                    ),
                );

            }

        } else {

            $results = array(
                'status' => 'gagal',
                'json_data' => array(
                    'message' => "email atau password anda salah"
                ),
            );

        }

        return response()->json($results);
    }

    public function userregister(Request $request)
    {
        $this->validate($request, [
            'email' => 'required',
            'password' => 'required',
            'username' => 'required',
            'user_detail' => 'required',
        ]);

        if (UserMail::find($request->input('email'))) {
        
            return response()->json([
                "status" => "gagal",
                "json_data" => array(
                    "message"=>'email sudah terdaftar'
                ),
            ]);            
        
        } else {

            $proses = User::create([
                'email' => $request->email,
                'password' => Hash::make($request->password),
                'username' => $request->username,
                'user_detail' => json_encode($request->user_detail),
            ]);

            if ($proses) {
            
                $userDetail = $request->user_detail;          
                $dJson = json_encode($userDetail);
                $json = json_decode($dJson); 
                
                $results = array(
                    'status' => 'sukses',
                    'json_data' => array(
                        'email' => $request->email,
                        'username' => $request->username,
                        'user_detail' => $json
                    ),                    
                );
                
            } else {
    
                $results = array(
                    "status" => 'gagal',
                    "json_data" => null,
                );
    
            }
    
            return response()->json($results);
        
        }
    }

}